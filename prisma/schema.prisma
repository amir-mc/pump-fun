// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Token {
  mintAddress          String   @id @unique
  name                 String
  symbol               String
  bondingCurve         String
  creator              String
  signature            String
  timestamp            DateTime
  Tokenprice           String
  totalSupply          BigInt
  complete             Boolean
  virtualTokenReserves BigInt
  virtualSolReserves   BigInt
  realTokenReserves    BigInt
  realSolReserves      BigInt
  createdAt            DateTime @default(now())
}
model BondingCurveSignature {
  id                   Int      @id @default(autoincrement())
  signature            String   @unique
  curveAddress         String
  slot                 BigInt
  blockTime            Int?
  confirmationStatus   String
  error                String?
  memo                 String?
  virtualTokenReserves String
  virtualSolReserves   String
  realTokenReserves    String
  realSolReserves      String
  tokenTotalSupply     String
  complete             Boolean
  creator              String?
  preBalances          BigInt
  postBalances         BigInt
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@index([curveAddress])
  @@index([slot])
  @@index([blockTime])
}


// model BondingCurveTest {
//   id        Int      @id @default(autoincrement())
//   curveAddr String
//   Tokenprice String
//   virtual_token_reserves BigInt
//   virtual_sol_reserves   BigInt
//   real_token_reserves    BigInt
//   real_sol_reserves      BigInt
//   token_total_supply     BigInt
//   complete   Boolean
//   creator    String?
//   createdAt  DateTime @default(now())
// }
// model Token {
//   mintAddress       String  @id @unique
//   name              String
//   symbol            String
//   bondingCurve      String
//   creator           String
//   signature         String
//   timestamp         DateTime
//   virtualTokenRes   BigInt
//   virtualSolRes     BigInt
//   realTokenRes      BigInt
//   realSolRes        BigInt
//   totalSupply       BigInt
//   complete          Boolean
//   createdAt         DateTime @default(now())
// }